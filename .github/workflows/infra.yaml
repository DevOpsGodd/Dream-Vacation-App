name: 'Infra for FullStack Application'

on:
  workflow_dispatch:
    inputs:
      tfvars_file:
        description: 'Path to the .tfvars file'
        required: true
        default: 'terraform.tfvars'
      action:
        type: choice
        description: 'Apply or Destroy'
        options:
        - plan
        - apply
        - destroy
        required: true
        default: 'plan'
  push:
    branches: 
        - main
        - develop
    paths:
        - 'infra/**'
        - '.github/workflows/infra.yaml'
env:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  contents: read

jobs:
  checkout-repo:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: infra
    
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

  terraform-initializing:
    runs-on: ubuntu-latest
    needs: checkout-repo
    steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.8.4
        
    - name: Checkout repository
      uses: actions/checkout@v4
      
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: infra
      run: terraform init

  terraform-formatting-validating:
    runs-on: ubuntu-latest
    needs: terraform-initializing
    steps:  
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.8.4
        
    - name: Terraform Init
      working-directory: infra
      run: terraform init
      
    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      working-directory: infra
      run: terraform fmt

    - name: Terraform Validate
      working-directory: infra
      run: terraform validate

  terraform-action:
    runs-on: ubuntu-latest
    needs: terraform-formatting-validating    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.8.4

    - name: Terraform Init
      working-directory: infra
      run: terraform init

    - name: Terraform Plan
      if: ${{ github.event.inputs.action  == 'plan' }}
      working-directory: infra
      # Generates an execution plan for Terraform
      run: |
        terraform plan -var-file=${{ github.event.inputs.tfvars_file }} -input=false
    
      # Apply the Terraform Configuration according to the parameter
    - name: Terraform Action
      if: ${{ github.event.inputs.action  == 'apply' }}
      working-directory: infra
      run: terraform ${{ github.event.inputs.action }} -auto-approve -var-file=${{ github.event.inputs.tfvars_file }} -input=false

    - name: Terraform Destroy
      if: ${{ github.event.inputs.action == 'destroy' }}
      working-directory: infra
      run: terraform ${{ github.event.inputs.action }} -auto-approve -var-file=${{ github.event.inputs.tfvars_file }} -input=false