apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.repository }}:{{ .Values.backend.tag }}"
          imagePullPolicy: {{ .Values.backend.pullPolicy }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.backend.configMapName }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.secretName }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.backend.configMapName }}
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.backend.configMapName }}
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.backend.configMapName }}
                  key: POSTGRES_PORT
            - name: DATABASE_URL
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)"
          ports:
            - containerPort: {{ .Values.backend.backendTargetPort }}
          resources:
            requests:
              memory: {{ .Values.backend.requests.memory }}
              cpu: {{ .Values.backend.requests.cpu }}
            limits:
              memory: {{ .Values.backend.limits.memory }}
              cpu: {{ .Values.backend.limits.cpu }}
